{"metadata": {"name": "Runbook Tutor Actions", "description": "This action package is used by the Runbook Tutor to retrieve available actions from the Sema4 \nDesktop action servers, deploy agents\n", "secrets": {}, "version": 1}, "openapi.json": {"openapi": "3.1.0", "info": {"title": "Sema4.ai Action Server", "version": "0.14.0"}, "servers": [{"url": "http://localhost:8080"}], "paths": {"/api/actions/runbook-tutor-actions/get-actions/run": {"post": {"summary": "Get Actions", "description": "Retrieve available actions from the Sema4 Desktop action servers. The returned actions will\ninclude their names, descriptns and full OpenAI tool specification. You can exclude\ncertain actions from the return by passing them as internal actions.", "operationId": "get_actions", "requestBody": {"content": {"application/json": {"schema": {"properties": {"internal_actions": {"properties": {"names": {"items": {"type": "string"}, "type": "array", "title": "Names", "description": "The names of the internal actions."}}, "type": "object", "required": ["names"], "title": "Internal Actions", "description": "A list of actions to exclude from the return."}}, "type": "object", "required": ["internal_actions"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"properties": {"actions": {"items": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the action."}, "port": {"type": "integer", "title": "Port", "description": "The port the action server is running on."}, "api_spec": {"type": "object", "title": "Api Spec", "description": "The API specification of the action retrieved from the action server."}}, "type": "object", "required": ["name", "port", "api_spec"], "title": "ActionPackage"}, "type": "array", "title": "Actions", "description": "A list of actions available on the Sema4 Desktop action servers."}}, "type": "object", "required": ["actions"], "title": "Response for Get Actions", "description": "A list of actions available on the Sema4 Desktop action servers."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/runbook-tutor-actions/deploy-agent-to-desktop/run": {"post": {"summary": "Deploy Agent To Desktop", "description": "Deploys an agent to desktop that will use the provided system prompt as it's Runbook.", "operationId": "deploy_agent_to_desktop", "requestBody": {"content": {"application/json": {"schema": {"properties": {"name": {"type": "string", "title": "Name", "description": "The name of the agent to deploy."}, "description": {"type": "string", "title": "Description", "description": "The description of the agent to deploy."}, "system_prompt": {"type": "string", "title": "System Prompt", "description": "The system prompt to use for the agent."}, "tool_names": {"type": "string", "title": "Tool Names", "description": "The names of the tools to use for the agent as a JSON string representation of\na list of dictionaries, see example below. The port number MUST be obtained from the\nAction Getter tool and passed in as an integer.\n\n```\n[\n    {\n        \"tool_name\": \"Dummy Tool\",\n        \"port\": port-as-int\n    },\n    {\n        ...\n    }\n]\n```"}}, "type": "object", "required": ["name", "description", "system_prompt", "tool_names"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response for Deploy Agent To Desktop", "description": "The assistant ID of the deployed agent."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/runbook-tutor-actions/get-latest-thread/run": {"post": {"summary": "Get Latest Thread", "description": "Gets the latest thread of an agent.", "operationId": "get_latest_thread", "requestBody": {"content": {"application/json": {"schema": {"properties": {"assistant_id": {"type": "string", "title": "Assistant Id", "description": "Id of the assistant."}}, "type": "object", "required": ["assistant_id"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response for Get Latest Thread", "description": "The content of the thread."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/runbook-tutor-actions/get-all-agents/run": {"post": {"summary": "Get All Agents", "description": "Gets all agent ids available.", "operationId": "get_all_agents", "requestBody": {"content": {"application/json": {"schema": {"properties": {}, "type": "object"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response for Get All Agents", "description": "List of agent names and their ids."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/runbook-tutor-actions/get-agent-runbook/run": {"post": {"summary": "Get Agent Runbook", "description": "Gets agent details.", "operationId": "get_agent_runbook", "requestBody": {"content": {"application/json": {"schema": {"properties": {"assistant_id": {"type": "string", "title": "Assistant Id", "description": "Id of the assistant."}}, "type": "object", "required": ["assistant_id"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response for Get Agent Runbook", "description": "Assistant details."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/actions/runbook-tutor-actions/update-agent-runbook/run": {"post": {"summary": "Update Agent Runbook", "description": "Updates a runbook of an existing agent.", "operationId": "update_agent_runbook", "requestBody": {"content": {"application/json": {"schema": {"properties": {"assistant_id": {"type": "string", "title": "Assistant Id", "description": "Id of the assistant."}, "new_runbook": {"type": "string", "title": "New Runbook", "description": "The new runbook to be changed to the assistant. Include a COMPLETE runbook, not just the updated parts."}}, "type": "object", "required": ["assistant_id", "new_runbook"]}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "string", "title": "Response for Update Agent Runbook", "description": "Assistant details."}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"errors": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Errors"}}, "type": "object", "title": "HTTPValidationError"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}}
